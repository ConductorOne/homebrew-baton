# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class BatonAircall < Formula
  desc ""
  homepage "https://conductorone.com"
  version "0.0.1"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ConductorOne/baton-aircall/releases/download/v0.0.1/baton-aircall-v0.0.1-darwin-amd64.zip"
      sha256 "55d11dea2dde0a7031e0788c458b5f8072f29ec44e7127f9bfab134e74880ba3"

      def install
        bin.install "baton-aircall"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ConductorOne/baton-aircall/releases/download/v0.0.1/baton-aircall-v0.0.1-darwin-arm64.zip"
      sha256 "9e4954312e1341379fbd79abb93b53d88cfe367b47245766f942f422394fbfd6"

      def install
        bin.install "baton-aircall"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ConductorOne/baton-aircall/releases/download/v0.0.1/baton-aircall-v0.0.1-linux-amd64.tar.gz"
        sha256 "6f770aaaeab81fb30c0f8614bf6a9fb5271ec5c8b1ded54c6c8bab1af3ad9824"

        def install
          bin.install "baton-aircall"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ConductorOne/baton-aircall/releases/download/v0.0.1/baton-aircall-v0.0.1-linux-arm64.tar.gz"
        sha256 "f221e4fa39eeb72bf42fe90c60f3125169e523486d724472c78d74ba6b1092bd"

        def install
          bin.install "baton-aircall"
        end
      end
    end
  end

  test do
    system "#{bin}/baton-aircall -v"
  end
end
